{
	"info": {
		"_postman_id": "4e707078-4766-433c-90ef-63add2d49c8a",
		"name": "COFFEESHOP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6271052"
	},
	"item": [
		{
			"name": "MANAGER",
			"item": [
				{
					"name": "List drinks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "List drinks with details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('List all drinks', function(){",
									"    pm.response.to.have.status(200)",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks-detail",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new drink",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Create a new drink with the given data', function(){",
									"    pm.response.to.be.ok",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My drink\",\n    \"recipe\" : [{\"name\" : \"Ingrediant 1\", \"color\" : \"green\", \"parts\" : 1}]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cannot create Drink without title and recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Cannot create Drink without title and recipe', function(){",
									"    pm.response.to.have.status(422)",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cannot update an inexistent drink",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('We cannot update an inexistent drink', function(){",
									"    pm.response.to.have.status(404)",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\" : \"A drink\",\n    \"recipe\" : []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks/10000",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks",
								"10000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update drink with invalid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('We cannot update a drink without data', function(){",
									"    pm.response.to.have.status(422)",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks/1",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch drink",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Create a new drink with the given data', function(){",
									"    pm.response.to.be.ok",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipe\": [\n            {\n                \"color\": \"lightblue\",\n                \"name\": \"water\",\n                \"parts\": 1\n            },\n            {\n                \"color\": \"blue\",\n                \"name\": \"alcohol\",\n                \"parts\": 2\n            }\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks/1",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete drink",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Remove drink with the given id', function(){",
									"    pm.response.to.have.status(200)",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks/2",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cannot delete inexistent drink",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Remove drink with the given id', function(){",
									"    pm.response.to.be.notFound",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks/2000",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks",
								"2000"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ijh6ZTV3dEZpc2NvSUFHbHMwbW5BVCJ9.eyJpc3MiOiJodHRwczovL2Rldi0wbW1la3dwZS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjJlNTNlMWE0M2U5ODg1ODU5ZGNmNjgyIiwiYXVkIjoiY29mZmVlcyIsImlhdCI6MTY1OTE5Nzk5NywiZXhwIjoxNjU5MjgyNTk3LCJhenAiOiJkcEpoa1g5T0VQM1lRd3ZtS1JoZ1pKcW9VT2dyWk43ciIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmRyaW5rcyIsImdldDpkcmlua3MiLCJnZXQ6ZHJpbmtzLWRldGFpbCIsInBhdGNoOmRyaW5rcyIsInBvc3Q6ZHJpbmtzIl19.P82tunM91a1etziPl3avmvfvXHpLfoWUAjcyLcYQ4E7ckURiK1H2g2rVPTebrnAmqxAoAdxcHeVQV_lwBvawkIesH25DW-P0vh2cIhDHPR4x13XoatzQUpV2XterqzMausRE0voJT0poa6iLGvLlt7mnDBQ3GHB7-5Wo3nzBwlhwTKsCoDawPTd6IN1rSZVv2-ELRurJnWPnIg6Z_crokPaQfuSWQt20SZkxgrQvwhKEBlfZmH46NvbUBDIk5fAf4YUMFi69xhrbeMei9rmTrYu-PuqMxILernh_s3jJl2ec-PjN23i7kQiggBhXPmFbDOgewuruE9gdUhPAD4POBQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "BARISTA",
			"item": [
				{
					"name": "List drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('List drinks', function(){",
									"    pm.response.to.be.ok",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "List drinks with details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('List drinks', function(){",
									"    pm.response.to.be.ok",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks-detail",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cannot create drink",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Insufficient permissions to create a drink\", function(){",
									"    pm.response.to.be.unauthorized",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\" : \"Impossible to add this drink\",\n    \"recipe\"   : [{\"name\": \"Ingradient\", \"color\" : \"black\", \"parts\"  : 1}]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cannot delete drink",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Insufficient permissions to delete a drink\", function(){",
									"    pm.response.to.be.unauthorized",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks/2",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cannot patch a drink",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Insufficient permissions to patch a drink\", function(){",
									"    pm.response.to.be.unauthorized",
									"    pm.response.to.have.jsonBody",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/api/drinks/2",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"api",
								"drinks",
								"2"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ijh6ZTV3dEZpc2NvSUFHbHMwbW5BVCJ9.eyJpc3MiOiJodHRwczovL2Rldi0wbW1la3dwZS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjJlNTNkNDFhNmM1ZmZhMWU4Nzg0MTcyIiwiYXVkIjoiY29mZmVlcyIsImlhdCI6MTY1OTIxNDczMCwiZXhwIjoxNjU5Mjk5MzMwLCJhenAiOiJkcEpoa1g5T0VQM1lRd3ZtS1JoZ1pKcW9VT2dyWk43ciIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmRyaW5rcyIsImdldDpkcmlua3MtZGV0YWlsIl19.IoBRaezXc8eZIo8s_Nt2XIeB3LPToGH_2Y2NLDotLv0bchtY2-YR1TgBrpVdSyKowu4b6gVbDLSl1Wsz5tJkgeU5bZw5auMWd4HsIEyvG5oCrLqP921K1862k5Kxem7bB-v1jjN2eXidSkxwFk7JtKnRUGzkJdRMpbU7U9lqDORDw0f0QN-YJu22S32GzVIeo-lpc-i3Uqe63l1JvOLEr6dduxFSOjAy9PUlHhyVfQ8hPQiu1M5qsT-c6pkhIJKX2xLAFHZc4DTtkYLQ4vpvq4DhNl2neqOcwThznXqpTuUmfQwPdaBGGopy4lEexcq91P_IrEtAo6pUY9-3OuB_OA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "List short drinks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Anonymous user will able to access short list drinks', function(){",
							"    pm.response.to.be.ok",
							"    pm.response.to.have.jsonBody",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/api/drinks",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"api",
						"drinks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot List drinks with details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Anonymous users cannot list details drinks', function(){",
							"    pm.response.to.be.badRequest",
							"    pm.response.to.have.jsonBody",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/api/drinks-detail",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"api",
						"drinks-detail"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot create drink",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Anonymous users cannot create drinks', function(){",
							"    pm.response.to.be.badRequest",
							"    pm.response.to.have.jsonBody",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\" : \"Impossible to add this drink\",\n    \"recipe\"   : [{\"name\": \"Ingradient\", \"color\" : \"black\", \"parts\"  : 1}]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/api/drinks",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"api",
						"drinks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot delete drink",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Anonymous users cannot delete drink', function(){",
							"    pm.response.to.be.badRequest",
							"    pm.response.to.have.jsonBody",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/api/drinks/2",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"api",
						"drinks",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot update drink",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('We cannot update a drink without data', function(){",
							"    pm.response.to.be.badRequest",
							"    pm.response.to.have.jsonBody",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://127.0.0.1:5000/api/drinks/1",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"api",
						"drinks",
						"1"
					]
				}
			},
			"response": []
		}
	]
}